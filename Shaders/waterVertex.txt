#version 330 core 

layout (location = 0) in vec3 position; 
layout (location = 1) in vec3 normal;
layout (location = 2) in vec2 textureCoordinates;

out vec2 texCoords;

uniform mat4 model;
uniform mat4 view; 
uniform mat4 projection;
uniform float time;

void main()
{	
	/* first transform the normal into eye space and normalize the result */
	mat4 normalMatrix = transpose(inverse(model*view));
	
	gl_Position = projection * view * model * vec4(position.x, position.y, position.z, 1.0f);
	
	texCoords = textureCoordinates;
	//gl_TexCoord[0] = gl_MultiTexCoord0;
	texCoords.x -= 0.0002*time;
	texCoords.y -= 0.0004*time;
} 
