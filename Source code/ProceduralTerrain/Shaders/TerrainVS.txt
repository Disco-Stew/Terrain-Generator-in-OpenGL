layout (location = 0) in vec3 position; 
layout (location = 1) in vec3 normal;
layout (location = 2) in vec2 textureCoord;

out vec3 normalCalc;
out float height;
out mat4 normalMat;
uniform mat4 model;
uniform mat4 view; 
uniform mat4 projection;

void main()
{	
	/* first transform the normal into eye space and normalize the result */
	normalMatrix = transpose(inverse(model*view));

	normalCalc = normalize(normalMat * normal);
	
	/* now normalize the light's direction. Note that according to the
	OpenGL specification, the light is stored in eye space. Also since 
	we're talking about a directional light, the position field is actually 
	direction */


	/* Normalize the halfVector to pass it to the fragment shader */
	
	
	height = position.y;	
	gl_Position = projection * view * model * vec4(position.x, position.y, position.z, 1.0);
	
	texCoords = textureCoordinates;
	
	
	
} 
